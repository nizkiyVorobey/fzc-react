{"version":3,"sources":["api/API_clients.js","store/store.js","components/LogInOut/LogInOut.js","components/UserItem/UserItem.js","components/UserList/UserList.js","components/Navigation/Navigation.js","components/Preloader/Preloader.js","components/ItinialPage/ItinialPage.js","components/UserInfo/UserInfo.js","components/FullUserItself/FullUserItself.js","App.js","index.js"],"names":["loadUserList","a","fetch","response","json","data","initialState","logged","pending","userList","actionType","loadUsers","dispatch","type","Promise","all","then","value","results","catch","error","alert","mainRecuer","combineReducers","reducerUsers","state","action","store","createStore","applyMiddleware","thunk","connect","setLogged","loggedCreator","loggedValue","title","history","useHistory","className","onClick","push","UserItem","user","src","picture","thumbnail","alt","name","first","last","email","dob","date","to","login","username","useState","sortedUserList","setSortedUserList","visibleUserList","setVisibleUserList","filterFieldValue","setFilterFieldValue","birthday","sortedDirection","setSortedDirection","sortBy","param","sortedList","sort","userA","userB","fullNameA","fullNameB","reverse","Date","useEffect","filter","toLocaleLowerCase","includes","id","onChange","event","target","htmlFor","map","key","uuid","Navigation","exact","Preloader","InitialPage","defaultProps","UserInfo","medium","gender","location","street","number","city","counter","postcode","coordinates","latitude","longitude","timezone","offset","description","password","salt","md5","sha1","sha256","age","registered","phone","cell","nat","PropTypes","shape","country","large","match","useRouteMatch","currentUser","find","params","slice","startLoad","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.02347aa2.chunk.js","sourcesContent":["export async function loadUserList() {\r\n    const response = await fetch(\"https://randomuser.me/api/?results=50\");\r\n    const data = await response.json();\r\n    return data\r\n}","import {createStore, combineReducers, applyMiddleware} from \"redux\";\r\nimport thunk from 'redux-thunk'\r\nimport { loadUserList } from \"../api/API_clients\";\r\n\r\nconst initialState = {\r\n    logged: false,\r\n    pending: null,\r\n    userList: [],\r\n};\r\n\r\nconst actionType = {\r\n    SET_LOGGED: 'SET_LOGGED',\r\n    LOAD_USER_LIST_SUCCESS: 'LOAD_USER_LIST_SUCCESS',\r\n    LOAD_USER_LIST_PENDING: 'LOAD_USER_LIST_PENDING',\r\n    LOAD_USER_LIST_ERROR: 'LOAD_USER_LIST_ERROR',\r\n};\r\n\r\nexport const loggedCreator = value => ({\r\n    type: actionType.SET_LOGGED,\r\n    value,\r\n});\r\n\r\nexport const loadUserListPendingCreator = () => ({\r\n    type: actionType.LOAD_USER_LIST_PENDING,\r\n});\r\n\r\nexport const loadUserListSuccessCreator = (value) => ({\r\n    type: actionType.LOAD_USER_LIST_SUCCESS,\r\n    value,\r\n})\r\n\r\nexport const loadUserListErrorCreator = () => ({\r\n    type: actionType.LOAD_USER_LIST_ERROR,\r\n});\r\n\r\n\r\nexport const loadUsers = () => {\r\n    return dispatch => {\r\n        dispatch(loadUserListPendingCreator())\r\n        Promise.all([loadUserList()])\r\n            .then(data => {\r\n                dispatch(loadUserListSuccessCreator(data[0].results))\r\n            })\r\n            .catch(error => {\r\n                alert('Something went wrong, try again')\r\n                dispatch(loadUserListErrorCreator())\r\n            })\r\n    }\r\n}\r\n\r\nconst reducerUsers = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case 'SET_LOGGED':\r\n            return {\r\n                ...state,\r\n                logged: action.value,\r\n            }\r\n        \r\n        case 'LOAD_USER_LIST_PENDING':\r\n            return {\r\n                ...state,\r\n                pending: true,\r\n            }\r\n\r\n        case 'LOAD_USER_LIST_SUCCESS':\r\n            return {\r\n                ...state,\r\n                pending: false,\r\n                userList: action.value,\r\n            }\r\n\r\n        case 'LOAD_USER_LIST_ERROR':\r\n            return {\r\n                ...state,\r\n                pending: false,\r\n                error: true,\r\n            }\r\n        \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const mainRecuer = combineReducers({reducerUsers});\r\n\r\nexport const store = createStore(\r\n    mainRecuer,\r\n    applyMiddleware(thunk),\r\n)","import React from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { PropTypes } from \"prop-types\"\r\n\r\nimport { loggedCreator } from \"../../store/store\";\r\n\r\nconst LogInOut = ({ setLogged, loggedValue, title }) => {\r\n    const history = useHistory();\r\n\r\n    // we successfully logged\r\n    const handleClick = () => {\r\n\r\n        if (!loggedValue) {\r\n            history.push('/')\r\n\r\n        }\r\n\r\n        setLogged(loggedValue);\r\n    }\r\n\r\n    return (\r\n        <a className=\"waves-effect waves-light btn\" onClick={handleClick}>{title}</a>\r\n    );\r\n};\r\n\r\nLogInOut.propTypes = {\r\n    setLogged: PropTypes.func.isRequired,\r\n    loggedValue: PropTypes.bool.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setLogged: value => dispatch(loggedCreator(value))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(LogInOut)","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { PropTypes } from \"prop-types\";\r\n\r\nexport const UserItem = ({user}) => {\r\n    return (\r\n        <tr>\r\n            <td><img src={user.picture.thumbnail} alt=\"\"/></td>\r\n            <td>{user.name.first} {user.name.last}</td>\r\n            <td>{user.email}</td>\r\n            <td>{user.dob.date}</td>\r\n            <td><Link to={`/user:${user.login.username}`}>See</Link></td>\r\n        </tr>\r\n    );\r\n};\r\n\r\nUserItem.propTypes = {\r\n    user: PropTypes.shape({\r\n        picture: PropTypes.shape({\r\n            thumbnail: PropTypes.string.isRequired\r\n        }),\r\n        name: PropTypes.shape({\r\n            first: PropTypes.string.isRequired,\r\n            last: PropTypes.string.isRequired,\r\n        }),\r\n        email: PropTypes.string,\r\n        dob: PropTypes.shape({\r\n            date: PropTypes.string.isRequired,\r\n        }),\r\n        login: PropTypes.shape({\r\n            username: PropTypes.string.isRequired,\r\n        }),\r\n    }).isRequired\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport LogInOut from \"../LogInOut/LogInOut\";\r\nimport { connect } from \"react-redux\";\r\nimport { UserItem } from \"../UserItem/UserItem\";\r\n\r\nimport \"./UserList.css\";\r\n\r\nconst UserList = ({ userList }) => {\r\n    const [sortedUserList, setSortedUserList] = useState(userList);\r\n    const [visibleUserList, setVisibleUserList] = useState(userList);\r\n\r\n    const [filterFieldValue, setFilterFieldValue] = useState('');\r\n\r\n    const [sortedDirection, setSortedDirection] = useState({\r\n        name: 'forward',\r\n        birthday: 'forward'\r\n    });\r\n\r\n    const sortBy = (param) => {\r\n        let sortedList = null;\r\n\r\n        switch (param) {\r\n            case 'name':\r\n                sortedList = visibleUserList\r\n                    .sort((userA, userB) => {\r\n                        let fullNameA = userA.name.first + \" \" + userA.name.last;\r\n                        let fullNameB = userB.name.first + \" \" + userB.name.last;\r\n\r\n                        if (fullNameA < fullNameB) //сортируем строки по возрастанию\r\n                            return -1\r\n                        if (fullNameA > fullNameB)\r\n                            return 1\r\n                        return 0 // Никакой сортировки\r\n                    })\r\n\r\n                if (sortedDirection.name === 'forward') {\r\n                    setSortedUserList(sortedList);\r\n                    setSortedDirection({\r\n                        name: 'reverse',\r\n                        birthday: 'forward'\r\n                    })\r\n                } else {\r\n                    setSortedUserList(sortedList.reverse());\r\n                    setSortedDirection({\r\n                        name: 'forward',\r\n                        birthday: 'forward'\r\n                    })\r\n                }\r\n\r\n                break;\r\n\r\n            case 'birthday':\r\n                sortedList = visibleUserList\r\n                    .sort((userA, userB) => new Date(userA.dob.date) - new Date(userB.dob.date));\r\n\r\n                if (sortedDirection.birthday === 'forward') {\r\n                    setSortedUserList(sortedList);\r\n                    setSortedDirection({\r\n                        name: 'forward',\r\n                        birthday: 'reverse'\r\n                    })\r\n                } else {\r\n                    setSortedUserList(sortedList.reverse());\r\n                    setSortedDirection({\r\n                        name: 'forward',\r\n                        birthday: 'forward'\r\n                    })\r\n                }\r\n\r\n                break;\r\n\r\n            default:\r\n                return userList\r\n        }\r\n    }\r\n\r\n\r\n    const handleFieldValue = (event) => {\r\n        setFilterFieldValue(event.target.value);\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        setVisibleUserList([...sortedUserList]\r\n            .filter(user => user.name.last.toLocaleLowerCase().includes(filterFieldValue.toLocaleLowerCase()))\r\n        )\r\n    }, [filterFieldValue]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"filtered-field-wrapper\">\r\n                    <div className=\"input-field\">\r\n                        <input\r\n                            value={filterFieldValue}\r\n                            id=\"last_name\"\r\n                            type=\"text\"\r\n                            className=\"validate\"\r\n                            onChange={handleFieldValue}\r\n                        />\r\n                        <label className=\"active\" htmlFor=\"last_name\">Last Name</label>\r\n                    </div>\r\n            </div>\r\n            <div className=\"log-in-out-user-list\">\r\n                <LogInOut loggedValue={false} title=\"LogOut\" />\r\n            </div>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Photo</th>\r\n                        <th onClick={() => sortBy('name')} className=\"sorted\">Name</th>\r\n                        <th>Email</th>\r\n                        <th onClick={() => sortBy('birthday')} className=\"sorted\">Birthday</th>\r\n                        <th>View</th>\r\n                    </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                    {\r\n                        visibleUserList.map(user => <UserItem user={user} key={user.login.uuid} />)\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    userList: state.reducerUsers.userList,\r\n});\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, null)(UserList);\r\n","import React from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst Navigation = () => {\r\n    return (\r\n        <nav>\r\n            <ul>\r\n                <li><Link to=\"/\" exact=\"true\">Start page</Link></li>\r\n                <li><Link to=\"/userList\" exact=\"true\">userList page</Link></li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navigation","import React from \"react\";\r\n\r\nexport const Preloader = () => {\r\n    return (\r\n        <div className=\"preloader-wrapper small active\">\r\n        <div className=\"spinner-layer spinner-blue\">\r\n          <div className=\"circle-clipper left\">\r\n            <div className=\"circle\"></div>\r\n          </div><div className=\"gap-patch\">\r\n            <div className=\"circle\"></div>\r\n          </div><div className=\"circle-clipper right\">\r\n            <div className=\"circle\"></div>\r\n          </div>\r\n        </div>\r\n  \r\n        <div className=\"spinner-layer spinner-red\">\r\n          <div className=\"circle-clipper left\">\r\n            <div className=\"circle\"></div>\r\n          </div><div className=\"gap-patch\">\r\n            <div className=\"circle\"></div>\r\n          </div><div className=\"circle-clipper right\">\r\n            <div className=\"circle\"></div>\r\n          </div>\r\n        </div>\r\n  \r\n        <div className=\"spinner-layer spinner-yellow\">\r\n          <div className=\"circle-clipper left\">\r\n            <div className=\"circle\"></div>\r\n          </div><div className=\"gap-patch\">\r\n            <div className=\"circle\"></div>\r\n          </div><div className=\"circle-clipper right\">\r\n            <div className=\"circle\"></div>\r\n          </div>\r\n        </div>\r\n  \r\n        <div className=\"spinner-layer spinner-green\">\r\n          <div className=\"circle-clipper left\">\r\n            <div className=\"circle\"></div>\r\n          </div><div className=\"gap-patch\">\r\n            <div className=\"circle\"></div>\r\n          </div><div className=\"circle-clipper right\">\r\n            <div className=\"circle\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    );\r\n};","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {PropTypes} from \"prop-types\"\r\n\r\nimport LogInOut from \"../LogInOut/LogInOut\";\r\nimport { Preloader } from \"../Preloader/Preloader\";\r\n\r\nimport \"./InitialPage.css\";\r\n\r\nconst InitialPage = ({pending}) => {\r\n    return (\r\n        <article className=\"initial-page\">\r\n            <div className=\"log-in-out-initial-page\">\r\n                <LogInOut loggedValue={true} title=\"LogIn\"/>\r\n            </div>\r\n            {\r\n                pending ? (\r\n                    <div className=\"preloader-initial-page-wrapper\">\r\n                        <Preloader/>\r\n                    </div>\r\n                ) : null\r\n            }\r\n        </article>\r\n    );\r\n};\r\n\r\nInitialPage.propTypes = {\r\n    pending: PropTypes.bool\r\n}\r\n\r\nInitialPage.defaultProps = {\r\n    pending: null\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    pending: state.reducerUsers.pending,\r\n});\r\n\r\n export default connect(mapStateToProps, null)(InitialPage);\r\n","import React from 'react';\r\nimport { PropTypes } from \"prop-types\"\r\nimport LogInOut from '../LogInOut/LogInOut';\r\n\r\nimport \"./UserInfo.css\";\r\n\r\nexport const UserInfo = ({ user }) => {\r\n    return (\r\n        <>\r\n            <div className=\"log-in-out-user-info\">\r\n                <LogInOut loggedValue={false} title=\"LogOut\" />\r\n            </div>\r\n            <ul className=\"collection user-info-container\">\r\n                <li className=\"collection-item\">\r\n                    <img src={user.picture.medium} alt=\"\" />\r\n                </li>\r\n                <li className=\"collection-item\">Gender: {user.gender}</li>\r\n                <ul className=\"collection container-item-block\">\r\n                    Name:\r\n                <li className=\"collection-item\">Title: {user.name.title}</li>\r\n                    <li className=\"collection-item\">Last name: {user.name.last}</li>\r\n                    <li className=\"collection-item\">First name: {user.name.first}</li>\r\n                </ul>\r\n\r\n                <ul className=\"collection container-item-block\">\r\n                    Location:\r\n                <li className=\"collection-item\">\r\n                        Street:\r\n                    <ul className=\"collection\">\r\n                            <li className=\"collection-item\">Number: {user.location.street.number}</li>\r\n                            <li className=\"collection-item\">Name: {user.location.street.name}</li>\r\n                        </ul>\r\n                    </li>\r\n                    <li className=\"collection-item\">City: {user.location.city}</li>\r\n                    <li className=\"collection-item\">State: {user.location.state}</li>\r\n                    <li className=\"collection-item\">Country: {user.location.counter}</li>\r\n                    <li className=\"collection-item\">Postcode: {user.location.postcode}</li>\r\n                    <li className=\"collection-item\">Coordinates:\r\n                    <ul className=\"collection container-item-block\">\r\n                            <li className=\"collection-item\">Latitude: {user.location.coordinates.latitude}</li>\r\n                            <li className=\"collection-item\">Longitude: {user.location.coordinates.longitude}</li>\r\n                        </ul>\r\n                    </li>\r\n                    <li className=\"collection-item\">Timezona:\r\n                    <ul className=\"collection container-item-block\">\r\n                            <li className=\"collection-item\">Offset: {user.location.timezone.offset}</li>\r\n                            <li className=\"collection-item\">Description: {user.location.timezone.description}</li>\r\n                        </ul>\r\n                    </li>\r\n                </ul>\r\n                <li className=\"collection-item\">Email: {user.email}</li>\r\n                <ul className=\"collection container-item-block\">\r\n                    Login:\r\n                <li className=\"collection-item\">uuid: {user.login.uuid}</li>\r\n                    <li className=\"collection-item\">username: {user.login.username}</li>\r\n                    <li className=\"collection-item\">password: {user.login.password}</li>\r\n                    <li className=\"collection-item\">salt: {user.login.salt}</li>\r\n                    <li className=\"collection-item\">md5: {user.login.md5}</li>\r\n                    <li className=\"collection-item\">sha1: {user.login.sha1}</li>\r\n                    <li className=\"collection-item\">sha256: {user.login.sha256}</li>\r\n                </ul>\r\n                <ul className=\"collection container-item-block\">\r\n                    Dob:\r\n                <li className=\"collection-item\">date: {user.dob.date}</li>\r\n                    <li className=\"collection-item\">age: {user.dob.age}</li>\r\n                </ul>\r\n                <ul className=\"collection container-item-block\">\r\n                    registered:\r\n                <li className=\"collection-item\">registered: {user.registered.date}</li>\r\n                    <li className=\"collection-item\">age: {user.registered.age}</li>\r\n                </ul>\r\n                <li className=\"collection-item\">Phone: {user.phone}</li>\r\n                <li className=\"collection-item\">cell: {user.cell}</li>\r\n                <ul className=\"collection container-item-block\">\r\n                    id:\r\n                <li className=\"collection-item\">name: {user.id.name}</li>\r\n                    <li className=\"collection-item\">value: {user.id.value}</li>\r\n                </ul>\r\n                <li className=\"collection-item\">nat: {user.nat}</li>\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nUserInfo.propTypes = {\r\n    user: PropTypes.shape({\r\n        gender: PropTypes.string,\r\n        name: PropTypes.shape({\r\n            title: PropTypes.string,\r\n            first: PropTypes.string,\r\n            last: PropTypes.string,\r\n        }),\r\n        location: PropTypes.shape({\r\n            street: PropTypes.shape({\r\n                number: PropTypes.number,\r\n                name: PropTypes.string,\r\n            }),\r\n            city: PropTypes.string,\r\n            state: PropTypes.string,\r\n            country: PropTypes.string,\r\n            postcode: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n            coordinates: PropTypes.shape({\r\n                latitude: PropTypes.string,\r\n                longitude: PropTypes.string,\r\n            }),\r\n            timezone: PropTypes.shape({\r\n                offset: PropTypes.string,\r\n                description: PropTypes.string,\r\n            }),\r\n        }),\r\n        email: PropTypes.string,\r\n        login: PropTypes.shape({\r\n            uuid: PropTypes.string,\r\n            username: PropTypes.string,\r\n            password: PropTypes.string,\r\n            salt: PropTypes.string,\r\n            md5: PropTypes.string,\r\n            sha1: PropTypes.string,\r\n            sha256: PropTypes.string,\r\n        }),\r\n        dob: PropTypes.shape({\r\n            date: PropTypes.string,\r\n            age: PropTypes.number,\r\n        }),\r\n        registered: PropTypes.shape({\r\n            date: PropTypes.string,\r\n            age: PropTypes.number,\r\n        }),\r\n        phone: PropTypes.string,\r\n        cell: PropTypes.string,\r\n        id: PropTypes.shape({\r\n            name: PropTypes.string,\r\n            value: PropTypes.string,\r\n        }),\r\n        picture: PropTypes.shape({\r\n            large: PropTypes.string,\r\n            medium: PropTypes.string,\r\n            thumbnail: PropTypes.string,\r\n        }),\r\n        nat: PropTypes.string,\r\n    })\r\n}\r\n\r\nUserInfo.defaultProps = {\r\n    user: PropTypes.shape({\r\n        gender: \"\",\r\n        name: PropTypes.shape({\r\n            title: \"\",\r\n            first: \"\",\r\n            last: \"\",\r\n        }),\r\n        location: PropTypes.shape({\r\n            street: PropTypes.shape({\r\n                number: \"\",\r\n                name: \"\",\r\n            }),\r\n            city: \"\",\r\n            state: \"\",\r\n            country: \"\",\r\n            postcode: \"\",\r\n            coordinates: PropTypes.shape({\r\n                latitude: \"\",\r\n                longitude: \"\",\r\n            }),\r\n            timezone: PropTypes.shape({\r\n                offset: \"\",\r\n                description: \"\",\r\n            }),\r\n        }),\r\n        email: \"\",\r\n        login: PropTypes.shape({\r\n            uuid: \"\",\r\n            username: \"\",\r\n            password: \"\",\r\n            salt: \"\",\r\n            md5: \"\",\r\n            sha1: \"\",\r\n            sha256: \"\",\r\n        }),\r\n        dob: PropTypes.shape({\r\n            date: \"\",\r\n            age: \"\",\r\n        }),\r\n        registered: PropTypes.shape({\r\n            date: \"\",\r\n            age: \"\",\r\n        }),\r\n        phone: \"\",\r\n        cell: \"\",\r\n        id: PropTypes.shape({\r\n            name: \"\",\r\n            value: \"\",\r\n        }),\r\n        picture: PropTypes.shape({\r\n            large: \"\",\r\n            medium: \"\",\r\n            thumbnail: \"\",\r\n        }),\r\n        nat: \"\",\r\n    })\r\n}","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useRouteMatch } from 'react-router-dom';\r\nimport { UserInfo } from \"../UserInfo/UserInfo\";\r\n\r\nconst FullUserItself = ({ userList }) => {\r\n    const match = useRouteMatch();\r\n    const currentUser = userList.find(user => user.login.username === match.params.username.slice(1,))\r\n\r\n    return (\r\n        <>\r\n            {\r\n                currentUser ? (\r\n                    <UserInfo user={currentUser}/>\r\n                ) : <p>This user not exist</p>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    userList: state.reducerUsers.userList,\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, null)(FullUserItself);","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport './App.css';\nimport 'materialize-css/dist/css/materialize.min.css';\nimport M from \"materialize-css\";\n\nimport { Route, Switch } from \"react-router-dom\";\n\nimport LogInOut from './components/LogInOut/LogInOut';\nimport UserList from './components/UserList/UserList';\nimport { loadUsers } from './store/store';\nimport Navigation from './components/Navigation/Navigation';\nimport InitialPage from './components/ItinialPage/ItinialPage';\nimport FullUserItself from './components/FullUserItself/FullUserItself';\n\nconst App = ({ logged, startLoad, pending }) => {\n\n  // start load user when we logged successfully\n  useEffect(() => {\n    if (logged) {\n      startLoad();\n    }\n  }, [logged]);\n\n  return (\n    <div className=\"app\">\n      <Navigation />\n      <Switch>\n        <Route path=\"/\" exact> <InitialPage /> </Route>\n        <Route path=\"/userList\" exact>\n          {\n            logged ? <UserList /> : <p>This page not availeble</p>\n          }\n        </Route>\n        <Route path=\"/user:username\" exact>\n          {\n            logged ? <FullUserItself/> : <p>This page not availeble</p>\n          }\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  logged: state.reducerUsers.logged,\n  pending: state.reducerUsers.pending,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  startLoad: () => dispatch(loadUsers())\n});\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport { Provider } from \"react-redux\";\n\nimport { store } from \"./store/store\";\n\nimport { HashRouter } from \"react-router-dom\";\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}